import matplotlib.pyplot as plt

# Kosinuswerte eines bestimten Embedding Modells mit bestimmten Testdaten (Hier Werte von 4ov3.5NEU und all-MiniL6)
rote_nummern = [
    0.28087693, 0.30136937, 0.17130058, 0.23007037, 0.2727392, 0.6442677,
    0.55636615, 0.4947645, 0.41000205, 0.38301772, 0.27747518, 0.19776326,
    0.24754634, 0.262289, 0.25843453, 0.4919923, 0.47299752, 0.52510965,
    0.5243769, 0.74310553, 0.59564507, 0.6803353, 0.8418746, 0.72691524,
    0.8467902, 0.4911421, 0.83661187, 0.5186133, 0.6843124, 0.6606128,
    0.6994916, 0.759088, 0.81126165, 0.6321899, 0.8041182, 0.65849805,
    0.7357281, 0.6611787, 0.75891906, 0.6273389, 0.7523489, 0.6872831,
    0.69464946, 0.66122395, 0.7230506, 0.76008725, 0.76324284, 0.74020207,
    0.6255716, 0.7228797, 0.7793654, 0.7943456, 0.7467291, 0.8411561,
    0.80479, 0.7778654, 0.87232316, 0.8934768, 0.7539508, 0.7582307,
    0.7108717, 0.696471, 0.6276727, 0.5795426, 0.6189238, 0.5764766,
    0.8280152, 0.6065266, 0.5124496, 0.6125724, 0.74147415, 0.6949113,
    0.80677605, 0.64865285, 0.79800344, 0.56105375, 0.6462687, 0.64574265,
    0.75095737, 0.76088727, 0.587562, 0.64599127, 0.5272461, 0.517807,
    0.6001916, 0.5549196, 0.56608033, 0.65088856, 0.3319788, 0.47539762,
    0.6891463, 0.6960597, 0.6752056, 0.7383982, 0.7391465, 0.24267854,
    0.62336993, 0.41483974, 0.31715944, 0.3457088, 0.41873258, 0.32916504,
    0.33223966, 0.27934563, 0.34967917, 0.42382205, 0.5188477, 0.5220506,
    0.509635, 0.44441974, 0.54709756, 0.56580406, 0.86782646, 0.857327,
    0.89320123, 0.8142632, 0.7686288, 0.7678938, 0.71083885, 0.67929983,
    0.6234716, 0.6650678, 0.63421917, 0.59801, 0.6605464, 0.50957835,
    0.5014242, 0.57982934, 0.4567067, 0.5133886, 0.8019097, 0.84982747,
    0.90513957, 0.83742714, 0.862581
]


# Bewertungswerte der urspünglichen (subjektiven) Bewertung
blaue_nummern = [
    [0.1, 0.1, 0.1, 0.1, 0.1],
    [0.9, 0.9, 0.5, 0.5, 0.5],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.1, 0.1, 0.9, 0.9, 0.9],
    [0.7, 0.7, 0.1, 0.7, 0.7],
    [0.9, 0.9, 0.9, 0.7, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.7, 0.7, 0.7, 0.7, 0.7],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.1, 0.1, 0.1, 0.1, 0.1],
    [0.9, 0.9, 0.1, 0.1, 0.1],
    [0.7, 0.7, 0.7, 0.7, 0.7],
    [0.9, 0.7, 0.9, 0.7, 0.9],
    [0.9, 0.9, 0.7, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.5, 0.9, 0.7, 0.1, 0.1],
    [0.7, 0.7, 0.7, 0.7, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.7, 0.7, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
    [0.9, 0.9, 0.9, 0.9, 0.9],
]

# Flatten der Liste der zweiten Gruppe von Zahlen
blaue_nummern_flach = [zahl for subliste in blaue_nummern for zahl in subliste]

# Erstellen der X-Koordinaten für die Punkte
x_rote = list(range(len(rote_nummern)))
x_blaue = list(range(len(blaue_nummern_flach)))

# Erstellen des Plots
plt.figure(figsize=(12, 6))

# Rote Punkte und Linie
plt.scatter(x_rote, rote_nummern, color='red', label='Kosinus Ähnlichkeitswerte', alpha=0.7)
plt.plot(x_rote, rote_nummern, color='red', linestyle='-', alpha=0.5)

# Blaue Punkte und Linie
plt.scatter(x_blaue, blaue_nummern_flach, color='blue', label='Ursprüngliche Bewertung', alpha=0.7)
plt.plot(x_blaue, blaue_nummern_flach, color='blue', linestyle='-', alpha=0.5)

# Hinzufügen von Labels und Legende
plt.xlabel('Index')
plt.ylabel('Einordnung der Bewertung')
plt.title('Visualisierung der Ursrpünglichen Bewertung sowie der Kosinus Ähnlichkeitswerte')
plt.legend()
plt.grid(True)

# Anzeigen des Plots
plt.show()


